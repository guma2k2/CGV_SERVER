on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      # - name: Deploy via SSH
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: 22
      #     script: |
      #       echo "âœ… SSH Connection Successful!"
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client
      - name: Debug SSH Connection
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "echo Connected!"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
      # - name: Setup Java
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: 'temurin'
      #     java-version: '17'
      # - name: Unit Tests
      #   run: mvn -B test --file pom.xml

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      # - name: Build the application
      #   run: |
      #     mvn clean
      #     mvn -B package --file pom.xml

      # - name: Build Docker Image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     dockerfile: Dockerfile
      #     push: false
      #     tags: ${{ secrets.DOCKER_USERNAME }}/movie-backend
      # - name: Push to Docker Hub
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     dockerfile: Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/movie-backend
